import random

def f(x):
    return -x**2 + 4*x

def hill_climbing(func, start_x, step_size=0.1, max_iterations=1000, tolerance=1e-6):
    current_x = start_x
    current_value = func(current_x)
    
    for _ in range(max_iterations):
        neighbors = [current_x + step_size, current_x - step_size]
        best_neighbor = None
        best_value = current_value
        
        for neighbor in neighbors:
            value = func(neighbor)
            if value > best_value:
                best_value = value
                best_neighbor = neighbor
        
        if best_neighbor is None or abs(current_x - best_neighbor) < tolerance:
            break
        
        current_x = best_neighbor
        current_value = best_value
    
    return current_x, current_value

start_x = random.uniform(-10, 10)
max_x, max_value = hill_climbing(f, start_x)
print(f"Maximum value of f(x) is approximately {max_value:.4f} at x = {max_x:.4f}")

OUTPUT :
Maximum value of f(x) is approximately 3.9997 at x = 2.0158
